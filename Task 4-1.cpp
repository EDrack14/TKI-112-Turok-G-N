#include <iostream>
#include "Task-4-1.h"
int main()
{
	int x, n, sum, count;
	sum = 0;
	count = 0;
	srand(time(0)); /*Функция srand() нужна для установки начальной точки, из которой происходит генерирование случайных чисел.
	Функция time() с параметром NULL возвращает количество миллисекунд. В связки эти две функции позволяют генерировать новые случайные числа при каждом запуске программы*/

	std::cout << "Enter n" << std::endl;
	std::cin >> n; //Пользователь вводит n - количество элементов в массиве
	
	int *array = new int[n]; //Объявление динмического одномерного массива, размер которого можно указать уже во время работы программы
	
	std::cout << "If you want to fill the array manually press 1, otherwise press 0" << std::endl;
	std::cin >> x;
	
	if (x == 1) //При нажатии 1 пользователь должен будет сам заполнить все элементы массива
	{
		for (int i = 1; i <= n; i++) //Цикл for пересчитывает элементы массива, начиная с 1
		{
			std::cin >> array[i];
		}
	}
	else if (x == 0) //При нажатии 0 все элементы заполнятся случайными числами
	{
		for (int i = 1; i <= n; i++)
		{
			array[i] = rand() % 2001 - 1000; /*Функция rand() генерирует случайные числа в диапозоне от 0 до константы RAND_MAX(32767)
			% 2001 устанавливает максимальное число при генерации 2000, а -1000 уменьшает и максимальное, и минимальное число на 1000. Таким образом генерируются рандомные числа  от -1000 до 1000 */
		    std::cout << array[i] << std::endl;
		}
	}
	for (int i = 1; i <= n; i++)
	{
		if (array[i] % 2 == 0) //Проверяется остаток от деления на 2, если остаток 0, значит число чётное и записывается в sum
		{
			sum = sum + array[i];
		}
		if ((array[i] >= -99 && array[i] <= -10) || (array[i] >= 10 && array[i] <= 99))
		{
			count = count + 1; //Если число находится в диапозоне от -99 до -10 или от 10 до 99 то к count прибавляется 1
		}
	}
	for (int i = n; i >= 1; i--) //Цикл пересчитывает элементы массива с конца
	{
		if (array[i] < 0) //Если число отрицательное, то его выводят в консоль, а затем заменяют на модуль значения перевого элемента массива
		{
			std::cout << "Last negative number: " << array[i];
			array[i] = abs(array[1]);
			std::cout << "; New number:" << array[i] << std::endl;
			break;
		}
	}
	std::cout << "Sum:" << sum << std::endl;
	std::cout << "Count:" << count << std::endl;
}

